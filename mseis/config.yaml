# MSEIS Configuration
system:
  name: "Multi-Modal Space Exploration Intelligence System"
  version: "2.0.0-enhanced"
  environment: "development"
  log_level: "INFO"
  max_concurrent_queries: 50
  query_timeout: 300  # seconds

# API Configuration
api:
  openai_api_key: ${OPENAI_API_KEY}
  openai_model: "gpt-4-turbo-preview"
  openai_embedding_model: "text-embedding-ada-002"
  anthropic_api_key: ${ANTHROPIC_API_KEY}
  timeout: 120
  max_retries: 3
  rate_limit: 10  # requests per minute

# Enhanced LLM Provider Configuration with Advanced RAG Integration
llm:
  # Primary provider: "ollama" (free) or "openai" (paid)
  primary_provider: "ollama"  # Free by default for recruitment use case
  
  # OpenAI Configuration (paid, high quality)
  openai:
    api_key: ${OPENAI_API_KEY}
    model: "gpt-4-turbo-preview"
    embedding_model: "text-embedding-3-large"  # Enhanced embedding model
    temperature: 0.1
    max_tokens: 4096  # Increased for complex recruitment analysis
    timeout: 60
    max_retries: 3
    
  # Ollama Configuration (free, local) - Enhanced for recruitment
  ollama:
    base_url: "http://localhost:11434"
    model: "llama3.1:8b"  # Better quality for recruitment analysis
    # Alternative models for different use cases:
    # model: "llama3.2:3b"     # Faster for quick queries
    # model: "llama3.1:8b"     # Balanced quality/speed
    # model: "codellama:7b"    # Code-specialized for tech recruitment
    # model: "mistral:7b"      # Alternative high-quality model
    temperature: 0.1
    max_tokens: 4096  # Increased for detailed recruitment insights
    timeout: 120
    stream: false
    
  # Enhanced Fallback Configuration
  fallback:
    enabled: true
    provider: "openai"  # Fallback to OpenAI if Ollama fails
    max_attempts: 3
    retry_delay: 1  # seconds

# Enhanced Embedding Configuration
embeddings:
  primary_model: "sentence-transformers/all-MiniLM-L6-v2"  # Fast and effective for recruitment
  openai_model: "text-embedding-3-large"  # High-quality embeddings
  recruitment_model: "sentence-transformers/all-mpnet-base-v2"  # Specialized for semantic similarity
  
  # Chunking strategy for recruitment documents
  chunk_size: 1000
  chunk_overlap: 200
  batch_size: 32
  
  # Smart chunking for different document types
  document_strategies:
    job_descriptions:
      chunk_size: 500
      chunk_overlap: 100
      preserve_sections: true
    resumes:
      chunk_size: 800
      chunk_overlap: 150
      preserve_experience_blocks: true
    company_profiles:
      chunk_size: 1200
      chunk_overlap: 250
      preserve_sections: true

# Enhanced Vector Storage Configuration for Recruitment
vector_db:
  provider: "chroma"  # chroma (local), faiss (local), or pinecone (cloud)
  
  # Chroma Configuration (local, free)
  chroma:
    persist_directory: "./storage/chroma_db"
    collection_name: "recruitment_knowledge"
    
  # FAISS Configuration (local, free)
  faiss:
    index_path: "./storage/faiss_index"
    dimension: 1536
    
  # Pinecone Configuration (cloud, paid)
  pinecone:
    api_key: ${PINECONE_API_KEY}
    environment: ${PINECONE_ENVIRONMENT}
    index_name: "recruitment-intelligence"
    namespaces:
      # Recruitment-focused namespaces
      job_descriptions: "job-descriptions"
      candidate_profiles: "candidate-profiles"
      company_data: "company-data"
      market_trends: "market-trends"
      skill_requirements: "skill-requirements"
      salary_data: "salary-data"
      # Legacy space exploration namespaces (for multi-domain capability)
      documents: "nasa-docs"
      images: "space-images"
      news: "space-news"
      academic: "arxiv-papers"
      research: "research-synthesis"
      simulations: "simulation-results"
    
    embedding_dimensions: 1536
    metric: "cosine"

# Advanced RAG Retrieval Configuration
rag:
  # Enhanced Retrieval Strategy
  retrieval:
    strategy: "adaptive"  # adaptive, hybrid, vector_only, keyword_only
    top_k: 20
    rerank_top_k: 5
    similarity_threshold: 0.7
    
    # Hybrid retrieval weights
    vector_weight: 0.7
    keyword_weight: 0.2
    graph_weight: 0.1
    
    # Re-ranking configuration
    reranker:
      model: "cross-encoder/ms-marco-MiniLM-L-6-v2"
      batch_size: 32
      enable_cross_encoder: true
      
  # Advanced Query Processing
  query_processing:
    enable_transformation: true
    enable_decomposition: true
    enable_hyde: true  # Hypothetical Document Embeddings
    enable_query_expansion: true
    max_query_variants: 3
    
  # Self-RAG Configuration for autonomous correction
  self_rag:
    enabled: true
    reflection_threshold: 0.6
    max_iterations: 3
    critique_model: "same"  # same or different LLM
    confidence_calibration: true
    
  # CRAG Configuration for fact verification
  crag:
    enabled: true
    confidence_threshold: 0.8
    max_corrections: 2
    verification_sources: ["web_search", "fact_check", "cross_reference"]
    enable_web_search: false  # Disabled by default for recruitment privacy
    
  # Agentic RAG for multi-agent collaboration
  agentic:
    enabled: true
    max_agents: 5
    agent_timeout: 300
    enable_collaboration: true
    coordination_strategy: "consensus"  # consensus, voting, hierarchical

# Enhanced Data Sources Configuration
data_sources:
  # Recruitment Data Sources
  recruitment:
    job_boards: 
      - "indeed"
      - "linkedin"
      - "glassdoor"
      - "monster"
      - "ziprecruiter"
    company_data: 
      - "company_websites"
      - "annual_reports"
      - "crunchbase"
    industry_reports: 
      - "market_research"
      - "salary_surveys"
      - "skill_trends"
    
  # Real-time Recruitment Data
  real_time:
    enabled: true
    update_interval: 3600  # seconds
    sources: 
      - "job_postings"
      - "market_trends"
      - "skill_requirements"
      - "salary_data"
  
  # Legacy Space Exploration APIs (for multi-domain capability)
  nasa_api_key: ${NASA_API_KEY}
  arxiv_api_key: ${ARXIV_API_KEY}
  github_token: ${GITHUB_TOKEN}
  
  # External API Keys for recruitment
  linkedin_api_key: ${LINKEDIN_API_KEY}
  indeed_api_key: ${INDEED_API_KEY}
  glassdoor_api_key: ${GLASSDOOR_API_KEY}

# Database Configuration
databases:
  primary_db: "postgresql://localhost:5432/mseis"
  redis_url: "redis://localhost:6379"
  elasticsearch_url: "http://localhost:9200"

# Agent Configuration
agents:
  # Core Agents
  document:
    enabled: true
    chunk_size: 1000
    chunk_overlap: 200
    metadata_extractors:
      - title
      - authors
      - date
      - mission
      - keywords
    
  image:
    enabled: true
    model: "openai/clip-vit-base-patch32"
    batch_size: 32
    max_resolution: 1024
    
  code_intelligence:
    enabled: true
    max_repo_size_mb: 100
    analysis_timeout: 300
    supported_languages:
      - python
      - javascript
      - typescript
      - java
      - go
    metrics:
      - complexity
      - maintainability
      - technical_debt
      - architecture_patterns
    
  graph:
    enabled: true
    max_depth: 3
    relationship_types:
      - PART_OF_MISSION
      - DISCOVERED_BY
      - ORBITS
      - LAUNCHED_FROM
      - DEVELOPED_BY
      - SUCCESSOR_OF
    
  realtime:
    enabled: true
    update_interval: 300  # seconds
    sources:
      - nasa_api
      - space_news
      - iss_tracker
    
  orchestrator:
    enabled: true
    routing_strategy: "intelligent"  # simple, confidence_based, llm_based, intelligent
    min_confidence: 0.7
    advanced_agent_threshold: 0.8
    
  planning:
    enabled: true
    max_subtasks: 10
    parallel_execution: true
    reflection_enabled: true
    
  # Advanced Agents
  autonomous_research:
    enabled: true
    max_hypotheses: 5
    evidence_gathering_timeout: 300
    parallel_evidence_collection: true
    min_evidence_items: 3
    confidence_threshold: 0.6
    cross_validation: true
    
  temporal_analysis:
    enabled: true
    max_events: 100
    dependency_analysis: true
    critical_path_algorithm: "advanced"
    perturbation_scenarios: 5
    risk_assessment: true
    timeline_optimization: true
    
  simulation_integration:
    enabled: true
    max_simulations: 10
    simulation_timeout: 600
    supported_simulations:
      - orbital_mechanics
      - thermal_analysis
      - propulsion
      - radiation
      - structural
      - atmospheric
      - communication
    visualization_enabled: true
    parameter_optimization: true
    
  knowledge_synthesis:
    enabled: true
    max_patterns: 20
    cross_domain_analysis: true
    innovation_scoring: true
    pattern_types:
      - temporal
      - causal
      - analogical
      - statistical
      - structural
    min_novelty_score: 0.6
    analogy_sources:
      - biology
      - architecture
      - computer_science
      - materials_science
      - transportation
    
  collaborative_planning:
    enabled: true
    max_stakeholders: 10
    pareto_optimization: true
    negotiation_rounds: 5
    consensus_threshold: 0.7
    risk_sharing_analysis: true
    contingency_planning: true
    stakeholder_types:
      - government_agency
      - commercial_partner
      - international_partner
      - research_institution
      - contractor

# Vector Storage Configuration
pinecone:
  namespaces:
    documents: "nasa-docs"
    images: "space-images"
    news: "space-news"
    academic: "arxiv-papers"
    research: "research-synthesis"
    simulations: "simulation-results"
  
  embedding_dimensions: 1536
  metric: "cosine"
  
# Graph Database Configuration
neo4j:
  batch_size: 1000
  constraints:
    - "CREATE CONSTRAINT mission_id IF NOT EXISTS FOR (m:Mission) REQUIRE m.id IS UNIQUE"
    - "CREATE CONSTRAINT astronaut_id IF NOT EXISTS FOR (a:Astronaut) REQUIRE a.id IS UNIQUE"
    - "CREATE CONSTRAINT body_id IF NOT EXISTS FOR (b:CelestialBody) REQUIRE b.id IS UNIQUE"
    - "CREATE CONSTRAINT stakeholder_id IF NOT EXISTS FOR (s:Stakeholder) REQUIRE s.id IS UNIQUE"
    - "CREATE CONSTRAINT pattern_id IF NOT EXISTS FOR (p:Pattern) REQUIRE p.id IS UNIQUE"
    
# Retrieval Configuration
retrieval:
  hybrid:
    vector_weight: 0.7
    keyword_weight: 0.2
    graph_weight: 0.1
  
  top_k: 20
  rerank_top_k: 5
  
  reranker:
    model: "cross-encoder/ms-marco-MiniLM-L-6-v2"
    batch_size: 32

# Enhanced Data Sources Configuration
data_sources:
  # NASA API Configuration
  nasa_api_key: ${NASA_API_KEY}  # Get free key from https://api.nasa.gov
  
  nasa:
    enabled: true
    apis:
      - techport        # NASA projects and missions
      - images          # NASA image and video library
      - data_portal     # NASA open data portal
      - apod           # Astronomy Picture of the Day
      - mars_weather   # Mars InSight weather data
      - neo_watch      # Near Earth Object tracking
    update_frequency: "daily"
    rate_limit: 10  # requests per hour for DEMO_KEY
    
  # Space Agencies and Organizations
  spacex:
    enabled: true
    apis:
      - launches       # Launch history and upcoming
      - rockets        # Rocket specifications
      - capsules       # Dragon capsule data
      - crew           # Astronaut information
    update_frequency: "daily"
    
  esa:
    enabled: true
    data_sources:
      - missions       # European Space Agency missions
      - satellites     # ESA satellite data
    update_frequency: "weekly"
    
  # Real-time Space Data
  real_time:
    enabled: true
    sources:
      - iss_position      # International Space Station tracking
      - solar_activity    # Space weather data
      - launch_schedules  # Upcoming launch schedules
      - mission_updates   # Mission status updates
      - satellite_tracking # Active satellite positions
    refresh_interval: 300  # 5 minutes
    
  # Astronomical Data
  astronomical:
    enabled: true
    sources:
      - exoplanet_archive    # NASA Exoplanet Archive
      - celestial_bodies     # Planets, moons, asteroids
      - space_weather        # Solar activity and radiation
      - stellar_data         # Star catalogs and properties
    update_frequency: "weekly"
    
  # Research and Academic Sources
  arxiv:
    enabled: true
    categories:
      - astro-ph          # Astrophysics
      - physics.space-ph  # Space Physics
      - cs.RO            # Robotics (space robotics)
      - physics.geo-ph   # Geophysics (planetary science)
    update_frequency: "daily"
    
  # Code and Technology Sources
  github:
    enabled: true
    repositories:
      - nasa             # NASA open source projects
      - spacex           # SpaceX related code
      - esa              # European Space Agency
      - jpl-nasa        # Jet Propulsion Laboratory
    analysis_depth: "full"
    
  # Educational and Outreach
  educational:
    enabled: true
    sources:
      - nasa_edu         # NASA educational resources
      - space_agencies   # International space agency content
      - mission_docs     # Mission documentation
      - technical_papers # Space technology papers
    update_frequency: "weekly"

# Monitoring and Analytics
monitoring:
  enabled: true
  metrics_retention_days: 30
  alert_thresholds:
    response_time_ms: 5000
    error_rate_percent: 5
    confidence_threshold: 0.6
    
  advanced_metrics:
    pattern_discovery_rate: true
    synthesis_quality_score: true
    stakeholder_satisfaction: true
    simulation_accuracy: true
    
# Performance Configuration
performance:
  cache:
    enabled: true
    ttl_seconds: 3600
    max_size_mb: 1000
    
  parallelization:
    max_workers: 8
    agent_concurrency: 4
    simulation_parallel: 2
    
  resource_limits:
    max_memory_mb: 4000
    max_cpu_percent: 80
    query_queue_size: 100

# Security Configuration
security:
  api_rate_limiting: true
  request_validation: true
  response_sanitization: true
  audit_logging: true
  
# Advanced Features Configuration
advanced_features:
  multi_agent_collaboration: true
  cross_domain_synthesis: true
  predictive_modeling: true
  stakeholder_optimization: true
  temporal_reasoning: true
  autonomous_research: true
  
  confidence_calibration: true
  uncertainty_quantification: true
  bias_detection: true
  fact_verification: true 